package javaApplication;

import java.util.*;

public class implementingDataStructure {
    public static byte[] ExtractionNumbers={1,2,4,8,16,32,64};
    public static int ExtractionCount=ExtractionNumbers.length-1;
    public static void main(String argv[])
    {
        implementingDataStructure obj=new implementingDataStructure();
        
        List<Byte> arr= new ArrayList<Byte>(Arrays.asList((byte)4,(byte)1,(byte)8,(byte)7,(byte)51,(byte)42,(byte)127,(byte)126,(byte)120,(byte)58,(byte)91,(byte)100,(byte)2));
        
        arr= obj.sort(arr);
        System.out.println(arr);
        //System.out.println(Arrays.toString(arr));
        
        
    }

  
    public List<Byte> sort(List<Byte> input)
    {
        Bucket bucket0=new Bucket();
        Bucket bucket1=new Bucket();
        int bucketsize0=0;
        int bucketsize1=0;
        if(input.size()== 1 || ExtractionCount==0)
        {
            return input;
        }
        else
        { 
        for(int i=0;i<input.size();i++)
        {
            if(ExtractionNumbers[ExtractionCount] !=(ExtractionNumbers[ExtractionCount]& input.get(i))) {
                    bucket0.arr.add(input.get(i));
                    bucketsize0=bucket0.arr.size();
            }
            
            else{
                    bucket1.arr.add(input.get(i));
                    bucketsize1=bucket1.arr.size();
                    
             }
        
        
        }
        ExtractionCount--;
        
          
        System.out.println("Contents of bucket 0 before recursive call "+bucket0.arr);
       
       
        System.out.println("Contents of bucket 1 before recursive call "+bucket1.arr);
        
        int tempEC = ExtractionCount;
        
        
        bucket0.arr=sort(bucket0.arr);
        ExtractionCount = tempEC;
        bucket1.arr=sort(bucket1.arr);
        
       

            
              
       
          
        System.out.println("Contents of bucket 0 after recursive call "+bucket0.arr);
       
       
        System.out.println("Contents of bucket 1 after recursive call "+bucket1.arr);
          
           
           //recursion
           
           for(int i=0;i<bucketsize0;i++)
           {
               input.add(i,bucket0.arr.get(i));
               
           }
           for(int i=bucketsize0;i<bucketsize0+bucketsize1;i++)
           {
               input.add(i,bucket1.arr.get(i-bucketsize0));
           }
           
           //System.out.println(Arrays.toString(input));
           System.out.println("Bucketsize 0 "+bucketsize0+" Bucketsize1 "+bucketsize1);
           
           return input;
    
        }
    }
   
                
          
    
  
}